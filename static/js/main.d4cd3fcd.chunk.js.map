{"version":3,"sources":["contexts/MyPokemonContext.js","components/Navbars/DefaultNavbar.js","pages/HomePage/HomePage.js","queries/pokemonsQuery.js","components/Paginations/DefaultPagination/DefaultPagination.js","restyles/index.js","pages/PokemonListPage/PokemonListPage.js","queries/pokemonQuery.js","components/Modals/CatchModal.js","components/Buttons/CatchButton/CatchButton.js","components/Tabs/AboutTab/AboutTab.js","components/Tabs/StatsTab/StatsTab.js","components/Tabs/MovesTab/MovesTab.js","pages/PokemonDetailPage/PokemonDetailPage.js","pages/MyPokemonListPage/MyPokemonListPage.js","App.js","index.js"],"names":["MyPokemonContext","createContext","MyPokemonContextProvider","props","useState","localMyPokemon","localStorage","getItem","JSON","parse","myPokemon","setMyPokemon","useEffect","setItem","stringify","Provider","value","addPokemon","pokemon","removePokemon","nickname","filter","elem","children","DefaultNavbar","console","log","Navbar","bg","variant","expand","Container","to","Brand","Toggle","Collapse","id","Nav","className","activeKey","Link","eventKey","HomePage","style","margin","class","GET_POKEMONS","gql","DefaultPagination","handlePrevPage","handleNextPage","currPage","lastPage","paginationIndexes","Array","keys","map","x","Pagination","Prev","onClick","disabled","Item","active","activeLabel","Next","restyleId","idLen","toString","length","repeat","restyleName","name","charAt","toUpperCase","slice","restyleHeight","height","restyleWeight","weight","restyleAbilities","abilities","index","ability","restyleLabel","label","labelArr","split","restyleMoveName","nameArr","concatenateName","forEach","PokemonListPage","offset","state","setState","useQuery","variables","limit","loading","error","data","Math","ceil","pokemons","count","prevOffset","nextOffset","Consumer","context","countOwned","results","url","url_components","parseInt","getId","owned","Card","Body","display","justifyContent","Image","marginRight","width","src","Footer","Button","size","floor","GET_POKEMON","CatchModal","showModal","catchStatus","closeModal","useContext","nicknameStatus","handleRelease","successContent","Modal","Form","Group","Label","Control","type","placeholder","onChange","event","currNickname","target","currNicknameStatus","Text","sprite","sprites","front_default","failedContent","show","onHide","Header","closeButton","Title","CatchButton","isSuccess","random","AboutTab","Row","Col","xs","StatsTab","stats","stat","base_stat","ProgressBar","now","max","MovesTab","moves","currMoves","move","level","version_group_details","level_learned_at","PokemonDetailPage","match","params","types","Badge","Tabs","defaultActiveKey","Tab","title","MyPokemonListPage","App","path","exact","component","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d4cd3fcd.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\n\nexport const MyPokemonContext = createContext()\n\nconst MyPokemonContextProvider = (props) => {\n  const [myPokemon, setMyPokemon] = useState(() => {\n    const localMyPokemon = localStorage.getItem(\"myPokemon\")\n    return localMyPokemon ? JSON.parse(localMyPokemon) : []\n  })\n  useEffect(() => {\n    localStorage.setItem(\"myPokemon\", JSON.stringify(myPokemon))\n  }, [myPokemon])\n  const addPokemon = (pokemon) => {\n    setMyPokemon([...myPokemon, pokemon])\n  }\n  const removePokemon = (nickname) => {\n    setMyPokemon(\n      myPokemon.filter(elem => elem.nickname !== nickname)\n    )\n  }\n  return (\n    <MyPokemonContext.Provider value={{\n      myPokemon: myPokemon,\n      addPokemon: addPokemon,\n      removePokemon: removePokemon\n    }}>\n      {props.children}\n    </MyPokemonContext.Provider>\n  )\n}\n\n\nexport default MyPokemonContextProvider\n","import { Navbar, Container, Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst DefaultNavbar = () => {\n  console.log(\"Render DefaultNavbar\")\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n      <Container>\n        <LinkContainer to={\"/phincon_pokedex\"}>\n          <Navbar.Brand>Phincon Pokedex</Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"me-auto\" activeKey=\"/phincon_pokedex\">\n            <LinkContainer to={\"/phincon_pokedex/pokemonlist\"}>\n              <Nav.Link eventKey=\"/phincon_pokedex/pokemonlist\">Pokemon List</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to={\"/phincon_pokedex/mypokemonlist\"}>\n              <Nav.Link eventKey=\"/mypokemon\">My Pokemon</Nav.Link>\n            </LinkContainer>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default DefaultNavbar","import { Badge, Container } from 'react-bootstrap'\nimport \"./HomePage.css\"\n\nconst HomePage = () => {\n    const techStack = [\"React JS\", \"React Hooks\", \"React Context\", \"GraphQL\", \"Apollo Client\"]\n    return (\n        <div style={{ margin: \"1rem\" }}>\n            <h1>Phincon Pokedex</h1>\n            <p>\n                This website was created in order to complete the Project Assignment for\n                <b>Software Engineer - Mobile or Web Platform</b> role. This website was\n                created in 2 days starting from Tuesday, October 26 2021 to Wednesday,\n                October 27 2021. The following are the points that I do and do not do\n                to help assess the examiner.\n                <br /><br />\n                <ol class=\"hp-ol\">\n                    <li>\n                        <b>(Finsihed)</b> Build a Mobile or <b>Web</b> app using Technology Stack (see notes below) you Preferred, where it should have 3 pages,\n                        Pokemon List, Pokemon Detail, and My Pokemon List.\n                    </li>\n                    <li>\n                        <b>(Finsihed)</b>You can use this API http://pokeapi.co as your data source.\n                    </li>\n                    <li>\n                        <b>(Finsihed)</b>Pokemon List page; should show a list of Pokemons’ names and picture. When a Pokemon is clicked, it should\n                        go to that Pokemon Detailpage.\n                    </li>\n                    <li>\n                        <b>(Finsihed)</b>Pokemon Detail page; should show a picture of the Pokemon with its moves and types (this information is from the API,\n                        feel free to add more information of the Pokemon if you want to). The mandatory thing is that there should be a button to\n                        catch the Pokemon (success probability is 50%, see poin 6), if success then user can give the Pokemon a nickname\n                        and add that Pokemon to ‘My Pokemon List’\n                    </li>\n                    <li>\n                        <b>(Finsihed)</b>My Pokemon List page; should show a list (like Pokemon List page, but with each of their nicknames as well) of all\n                        Pokemons you have caught. It should also be possible to release and rename (see poin 6) a Pokemon from the list on\n                        this page.\n                    </li>\n                    <li>\n                        <b>(Not Finsihed)</b>There should be 3 REST API delivered as a backend service:\n                    </li>\n                    <ol class=\"hp-ol\">\n                        <li>\n                            <b>(Not Finsihed)</b>REST API to return probability is 50 % when catching Pokemon.\n                        </li>\n                        <li>\n                            <b>(Not Finsihed)</b>REST API to release pokemon.This API should return a prime number, if the number returned by the API\n                            is not a prime number, then release will fail and vice versa.\n                        </li>\n                        <li>\n                            <b>(Not Finsihed)</b>REST API to rename pokemon.This function should return a combination of first name assigned combined\n                            with Fibonacci sequence, e.g.:\n                        </li>\n                        <ol className=\"hp-ol\">\n                            <li><b>(Not Finsihed)</b>First name assigned is “Mighty Pikachu”, first time renamed should be: “Mighty Pikachu-0”</li>\n                            <li><b>(Not Finsihed)</b>Second time renamed should be: “Mighty Pikachu-1”</li>\n                            <li><b>(Not Finsihed)</b>Third time renamed should be: “Mighty Pikachu-1”</li>\n                            <li><b>(Not Finsihed)</b>Fourth time renamed should be: “Mighty Pikachu-2”, and so on.</li>\n                        </ol>\n                    </ol>\n                    <li>\n                        <b>(Not Finsihed)</b>Any additional implementation microservice with containerization is an added value\n                    </li>\n                </ol>\n                Some of the points that I did not work on were caused by the lack of time provided. I'm sure I can do better if more time is given.\n                <br /><br />\n                Regards,<br />\n                Azhar Difa Arnanda<br />\n            </p>\n        </div>\n    )\n}\n\nexport default HomePage","import { gql } from '@apollo/client'\n\nconst GET_POKEMONS = gql`\n  query pokemons($limit: Int, $offset: Int) {\n    pokemons(limit: $limit, offset: $offset) {\n      count\n      next\n      previous\n      nextOffset\n      prevOffset\n      status\n      message\n      results {\n        url\n        name\n        image\n      }\n    }\n  }\n`\n\nexport default GET_POKEMONS","import Pagination from 'react-bootstrap/Pagination'\nimport \"./DefaultPagination.css\"\n\nconst DefaultPagination = ({ handlePrevPage, handleNextPage, currPage, lastPage }) => {\n  console.log(\"Render DefaultPagination\")\n  let paginationIndexes = []\n  if (lastPage > 5) {\n    if (currPage > 3 && currPage < lastPage - 2) {\n      paginationIndexes = [...Array(5).keys()].map(x => x + (currPage - 2))\n    } else {\n      if (currPage <= 3) {\n        paginationIndexes = [...Array(5).keys()].map(x => x + 1)\n      } else {\n        paginationIndexes = [...Array(5).keys()].map(x => x + (lastPage - 4))\n      }\n    }\n  } else {\n    paginationIndexes = [...Array(lastPage).keys()].map(x => x + 1)\n  }\n  return (\n    <div className=\"dp-container\">\n      <Pagination>\n        <Pagination.Prev\n          onClick={handlePrevPage}\n          disabled={handlePrevPage === null}\n        />\n        {\n          paginationIndexes.map(elem => {\n            return <Pagination.Item\n              key={elem}\n              active={elem === currPage ? true: false}\n              activeLabel=\"\"\n            >\n              {elem}\n            </Pagination.Item>\n          })\n        }\n        <Pagination.Next\n          onClick={handleNextPage}\n          disabled={handleNextPage === null}\n        />\n      </Pagination>\n    </div>\n  )\n}\n\nexport default DefaultPagination","const restyleId = (id) => {\n  const idLen = id.toString().length\n  return \"#\" + \"0\".repeat(4 - idLen) + id.toString()\n}\nconst restyleName = (name) => {\n  return name.charAt(0).toUpperCase() + name.slice(1)\n}\nconst restyleHeight = (height) => {\n  const heightInMeter = height / 10\n  return heightInMeter.toString() + \" m\"\n}\nconst restyleWeight = (weight) => {\n  const weightInKilogram = weight / 10\n  return weightInKilogram.toString() + \" kg\"\n}\nconst restyleAbilities = (abilities) => {\n  const result = abilities.map((elem, index) => {\n    const name = elem.ability.name\n    if (index === abilities.length - 1) {\n      return name.charAt(0).toUpperCase() + name.slice(1)\n    } else {\n      return name.charAt(0).toUpperCase() + name.slice(1) + \", \"\n    }\n  })\n  return result\n}\nconst restyleLabel = (label) => {\n  if (label === \"special-attack\" || label === \"special-defense\") {\n    const labelArr = label.split(\"-\")\n    return \"Sp.\" + labelArr[1].charAt(0).toUpperCase() + labelArr[1].slice(1)\n  }\n  return label.charAt(0).toUpperCase() + label.slice(1)\n}\nconst restyleMoveName = (name) => {\n  const nameArr = name.split(\"-\")\n  if (nameArr.length > 1) {\n    let concatenateName = \"\"\n    nameArr.forEach(elem => {\n      concatenateName += elem.charAt(0).toUpperCase() + elem.slice(1) + \" \"\n    })\n    return concatenateName\n  }\n  return name.charAt(0).toUpperCase() + name.slice(1)\n}\nconst restyleLevel = (level) => {\n  return \"Level \" + level.toString()\n}\nexport {\n  restyleId,\n  restyleName,\n  restyleHeight,\n  restyleWeight,\n  restyleAbilities,\n  restyleLabel,\n  restyleMoveName,\n  restyleLevel\n}","import { useState } from 'react'\nimport { useQuery } from '@apollo/client'\nimport GET_POKEMONS from '../../queries/pokemonsQuery'\nimport { MyPokemonContext } from '../../contexts/MyPokemonContext'\nimport { Card, Button, Image } from \"react-bootstrap\"\nimport { DefaultPagination } from '../../components/Paginations'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport \"./PokemonListPage.css\"\nimport { restyleName } from '../../restyles'\nimport { BiInfoCircle } from 'react-icons/bi'\n\nconst PokemonListPage = () => {\n  console.log(\"Render PokemonListPage\")\n  const [state, setState] = useState({\n    offset: 0,\n    currPage: 1,\n  })\n  const { loading, error, data } = useQuery(GET_POKEMONS, {\n    variables: { limit: 10, offset: state.offset }\n  })\n  if (loading) return \"Loading ...\"\n  if (error) return \"Error ...\"\n  const lastPage = Math.ceil(data.pokemons.count / 10)\n  const handlePrevPage = () => {\n    setState({\n      offset: data.pokemons.prevOffset,\n      currPage: state.currPage - 1\n    })\n  }\n  const handleNextPage = () => {\n    setState({\n      offset: data.pokemons.nextOffset,\n      currPage: state.currPage + 1\n    })\n  }\n  return (\n    <MyPokemonContext.Consumer>\n      {(context) => {\n        const getId = (url) => {\n          const url_components = url.split(\"/\")\n          return parseInt(url_components[url_components.length - 2])\n        }\n        const countOwned = (id) => {\n          return context.myPokemon.filter(pokemon => pokemon.id === id).length\n        }\n        const pokemons = data.pokemons.results.map(pokemon => {\n          const id = getId(pokemon.url)\n          return { id: id, name: pokemon.name, owned: countOwned(id) }\n        })\n        return (\n          <>\n            <div className=\"plp-flex-container\">\n              {\n                pokemons.map(pokemon => {\n                  return <div key={pokemon.id} className=\"plp-flex-item\">\n                    <Card className=\"plp-card\">\n                      <Card.Body style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                        <Image style={{ marginRight: \"1rem\", height: \"96px\", width: \"96px\" }} src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/201.png\" className=\"plp-image\" />\n                        <div>\n                          <span style={{ marginRight: \"0.5rem\" }}>{restyleName(pokemon.name)}</span><br />\n                          <span className=\"plp-subtitle\">You own {pokemon.owned}</span>\n                        </div>\n                      </Card.Body>\n                      <Card.Footer className=\"d-grid gap-2\">\n                        <LinkContainer to={`/phincon_pokedex/pokemondetail/${pokemon.name}`}>\n                          <Button size=\"sm\" variant=\"primary\">\n                            <div className=\"plp-button-content\">\n                              More Info\n                              <BiInfoCircle size={15} />\n                            </div>\n                          </Button>\n                        </LinkContainer>\n                      </Card.Footer>\n                    </Card>\n                  </div>\n                })\n              }\n            </div>\n            <DefaultPagination\n              handlePrevPage={state.offset !== 0 ? handlePrevPage : null}\n              handleNextPage={state.offset !== Math.floor(data.pokemons.count / 10) * 10 ? handleNextPage : null}\n              currPage={state.currPage}\n              lastPage={lastPage}\n            />\n          </>\n        )\n      }}\n    </MyPokemonContext.Consumer>\n  )\n}\n\nexport default PokemonListPage\n","import { gql } from '@apollo/client'\n\nconst GET_POKEMON = gql`\n  query pokemon($name: String!) {\n    pokemon(name: $name) {\n      id\n      name\n      sprites {\n        front_default\n      }\n      height\n      weight\n      abilities {\n        ability {\n          name\n        }\n      }\n      types {\n        type {\n          name\n        }\n      }\n      stats {\n        base_stat\n        stat {\n          name\n        }\n      }\n      moves {\n        move {\n          name\n        }\n        version_group_details {\n          level_learned_at\n        }\n      }\n    }\n  }\n`\n\nexport default GET_POKEMON","import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport { MyPokemonContext } from '../../contexts/MyPokemonContext'\nimport { useContext, useState } from 'react'\n\nconst CatchModal = ({ showModal, catchStatus, closeModal, pokemon }) => {\n  console.log(\"Render CatchModal\")\n  const { myPokemon, addPokemon } = useContext(MyPokemonContext)\n  const [state, setState] = useState({\n    nickname: \"\",\n    nicknameStatus: \"empty\"\n  })\n  const checkNickname = (event) => {\n    const currNickname = event.target.value\n    let currNicknameStatus = \"\"\n    if (currNickname.length === 0) {\n      currNicknameStatus = \"empty\"\n    } else if (currNickname.length > 0) {\n      const isNewNickname = myPokemon.filter(elem => elem.nickname === currNickname).length === 0\n      if (isNewNickname) {\n        currNicknameStatus = \"available\"\n      } else {\n        currNicknameStatus = \"not_available\"\n      }\n    }\n    setState({\n      nickname: currNickname,\n      nicknameStatus: currNicknameStatus\n    })\n  }\n\n  const handleSave = () => {\n    addPokemon({\n      id: pokemon.id,\n      name: pokemon.name,\n      nickname: state.nickname,\n      sprite: pokemon.sprites.front_default\n    })\n    closeModal()\n    setState({\n      nickname: \"\",\n      nicknameStatus: \"empty\"\n    })\n  }\n\n  const handleRelease = () => {\n    closeModal()\n    setState({\n      nickname: \"\",\n      nicknameStatus: \"empty\"\n    })\n  }\n\n  const successContent = <>\n    <Modal.Body>\n      <p>Catch success, please give your new pokemon a nickname</p>\n      <Form>\n        <Form.Group>\n          <Form.Label>Nickname</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter nickname\"\n            value={state.nickname}\n            onChange={checkNickname}\n          />\n          {state.nicknameStatus === \"empty\" ? <Form.Text>Nickname needed</Form.Text> : null}\n          {state.nicknameStatus === \"not_available\" ? <Form.Text>Nickname not available</Form.Text> : null}\n        </Form.Group>\n      </Form>\n    </Modal.Body>\n    <Modal.Footer>\n      <Button\n        variant=\"secondary\"\n        onClick={handleRelease}\n      >Release</Button>\n      <Button\n        variant=\"primary\"\n        onClick={handleSave}\n        disabled={state.nicknameStatus !== \"available\"}\n      >Save</Button>\n    </Modal.Footer>\n  </>\n\n  const failedContent = <Modal.Body>\n    <p>Catch failed, please try again.</p>\n  </Modal.Body>\n\n  return (\n    <Modal show={showModal} onHide={handleRelease}>\n      <Modal.Header closeButton>\n        <Modal.Title>Catch Status</Modal.Title>\n      </Modal.Header>\n      {catchStatus ? successContent : failedContent}\n    </Modal>\n  )\n}\n\nexport default CatchModal\n","import Button from 'react-bootstrap/Button'\nimport CatchModal from '../../Modals/CatchModal'\nimport { useState } from 'react'\nimport { CgPokemon } from 'react-icons/cg'\nimport \"./CatchButton.css\"\n\nconst CatchButton = ({ pokemon }) => {\n  console.log(\"Render CatchButton\")\n  const [state, setState] = useState({\n    showModal: false,\n    catchStatus: false\n  })\n  const catchPokemon = (event) => {\n    const success_rate = 0.5\n    const isSuccess = Math.random() < success_rate\n    if (isSuccess) {\n      setState({\n        showModal: true,\n        catchStatus: true\n      })\n    } else {\n      setState({\n        showModal: true,\n        catchStatus: false\n      })\n    }\n  }\n  const closeModal = (event) => {\n    setState({\n      catchStatus: false,\n      showModal: false\n    })\n  }\n  return (\n    <>\n      <Button\n        variant=\"primary\"\n        onClick={catchPokemon}\n        className=\"cb-button\"\n      >\n        <div className=\"cb-button-content\">\n          <span>Catch</span>\n          <CgPokemon size={20} />\n        </div>\n      </Button>\n      <CatchModal\n        showModal={state.showModal}\n        catchStatus={state.catchStatus}\n        closeModal={closeModal}\n        pokemon={pokemon}\n      />\n    </>\n  )\n}\n\nexport default CatchButton\n","import { Row, Col } from 'react-bootstrap'\nimport { restyleHeight, restyleWeight, restyleAbilities } from '../../../restyles'\nimport \"./AboutTab.css\"\n\nconst AboutTab = ({ height, weight, abilities }) => {\n  console.log(\"Render AboutTab\")\n  return (\n    <div className=\"at-container\">\n      <Row className=\"at-item\">\n        <Col className=\"at-label\">Height</Col>\n        <Col xs={8}>{restyleHeight(height)}</Col>\n      </Row>\n      <Row className=\"at-item\">\n        <Col className=\"at-label\">Weight</Col>\n        <Col xs={8}>{restyleWeight(weight)}</Col>\n      </Row>\n      <Row className=\"at-item\">\n        <Col className=\"at-label\">Abilities</Col>\n        <Col xs={8}>{restyleAbilities(abilities)}</Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default AboutTab","import { Row, Col, ProgressBar } from 'react-bootstrap'\nimport { restyleLabel } from '../../../restyles'\nimport \"./StatsTab.css\"\n\nconst StatsTab = ({ stats }) => {\n  console.log(\"Render StatsTab\")\n  return (\n    <div className=\"st-container\">\n      {\n        stats.map(elem => {\n          return <Row key={elem.stat.name} className=\"st-item\">\n            <Col className=\"st-label\">{restyleLabel(elem.stat.name)}</Col>\n            <Col xs={2}>{elem.base_stat}</Col>\n            <Col xs={6}><ProgressBar now={elem.base_stat} max={200} /></Col>\n          </Row>\n        })\n      }\n    </div>\n  )\n}\n\nexport default StatsTab\n","import { useState } from 'react'\nimport { restyleMoveName, restyleLevel } from '../../../restyles'\nimport { DefaultPagination } from '../../Paginations'\nimport \"./MovesTab.css\"\n\nconst MovesTab = ({ moves }) => {\n  console.log(\"Render MovesTab\")\n  const [state, setState] = useState({\n    limit: 10,\n    offset: 0,\n    currPage: 1,\n    lastPage: Math.ceil(moves.length / 10)\n  })\n  const currMoves = moves.slice(state.offset, state.limit)\n  const handlePrevPage = () => {\n    setState({\n      ...state,\n      limit: state.limit - 10,\n      offset: state.offset - 10,\n      currPage: state.currPage - 1\n    })\n  }\n  const handleNextPage = () => {\n    setState({\n      ...state,\n      limit: state.limit + 10,\n      offset: state.offset + 10,\n      currPage: state.currPage + 1\n    })\n  }\n  return (\n    <div className=\"mt-container\">\n      {\n        currMoves.map(elem => {\n          return <div key={elem.move.name}>\n            {restyleMoveName(elem.move.name)}<br />\n            <span className=\"mt-level\">\n              {restyleLevel(\n                elem.version_group_details[0].level_learned_at\n              )}\n            </span>\n            <hr />\n          </div>\n        })\n      }\n      <DefaultPagination\n        handlePrevPage={state.currPage === 1 ? null : handlePrevPage}\n        handleNextPage={state.currPage === state.lastPage ? null : handleNextPage}\n        currPage={state.currPage}\n        lastPage={state.lastPage}\n      />\n    </div>\n  )\n}\n\nexport default MovesTab\n","import { useQuery } from '@apollo/client'\nimport GET_POKEMON from '../../queries/pokemonQuery'\nimport { CatchButton } from '../../components/Buttons'\nimport { AboutTab, MovesTab, StatsTab } from '../../components/Tabs'\nimport {\n  Tabs, Tab, Image,\n  Badge\n} from 'react-bootstrap'\nimport { restyleId, restyleName } from '../../restyles'\nimport \"./PokemonDetailPage.css\"\n\nconst PokemonDetailPage = ({ match }) => {\n  console.log(\"Render PokemonDetailPage\")\n  const { loading, error, data } = useQuery(GET_POKEMON, {\n    variables: { name: match.params.name }\n  })\n  if (loading) return \"Loading ...\"\n  if (error) return \"Error ...\"\n  return (\n    <div className=\"pdp-container\">\n      <div className=\"pdp-identity-container\">\n        <h2 className=\"pdp-name\">{restyleName(data.pokemon.name)}</h2>\n        <h6>{restyleId(data.pokemon.id)}</h6>\n      </div>\n      <div className=\"pdp-badge-container\">\n        {\n          data.pokemon.types.map(elem => {\n            return <Badge\n              bg=\"primary\"\n              key={elem.type.name}\n              className=\"pdp-badge\"\n            >{elem.type.name}</Badge>\n          })\n        }\n      </div>\n      <div className=\"pdp-image-catch-button-container\">\n        <Image\n          src={data.pokemon.sprites.front_default}\n          className=\"pdp-image\"\n        /><br />\n        <CatchButton pokemon={data.pokemon} />\n      </div>\n      <Tabs defaultActiveKey=\"about\">\n        <Tab eventKey=\"about\" title=\"About\">\n          <AboutTab\n            height={data.pokemon.height}\n            weight={data.pokemon.weight}\n            abilities={data.pokemon.abilities}\n            types={data.pokemon.types}\n          />\n        </Tab>\n        <Tab eventKey=\"stats\" title=\"Stats\">\n          <StatsTab stats={data.pokemon.stats} />\n        </Tab>\n        <Tab eventKey=\"moves\" title=\"Moves\">\n          <MovesTab moves={data.pokemon.moves} />\n        </Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default PokemonDetailPage\n","import { MyPokemonContext } from '../../contexts/MyPokemonContext'\nimport { useContext } from 'react'\nimport {\n  Card, Button, Image,\n  Row, Col\n} from 'react-bootstrap'\nimport \"./MyPokemonListPage.css\"\nimport { BsFillTrashFill } from 'react-icons/bs'\nimport { restyleName } from \"../../restyles\"\n\nconst MyPokemonListPage = () => {\n  const { myPokemon, removePokemon } = useContext(MyPokemonContext)\n  console.log(\"Render MyPokemonListPage\")\n  return (\n    <>\n      <div className=\"mplp-flex-container\">\n        {\n          myPokemon.map(elem => {\n            return <div key={elem.nickname} className=\"mplp-flex-item\">\n              <Card className=\"mplp-card\">\n                <Card.Body style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                  <Image style={{marginRight: \"1rem\"}} src={elem.sprite} className=\"mplp-image\" />\n                  <div>\n                    <span style={{marginRight: \"0.5rem\"}}>{restyleName(elem.nickname)}</span><br/>\n                    <span className=\"mplp-subtitle\">{restyleName(elem.name)}</span>\n                  </div>\n                </Card.Body>\n                <Card.Footer className=\"d-grid gap-2\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"primary\"\n                    onClick={() => { removePokemon(elem.nickname) }}\n                  >\n                    <div className=\"mplp-button-content\">\n                      Release\n                      <BsFillTrashFill size={15} />\n                    </div>\n                  </Button>\n                </Card.Footer>\n              </Card>\n            </div>\n          })\n        }\n      </div>\n    </>\n  )\n}\n\nexport default MyPokemonListPage\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport MyPokemonContextProvider from \"./contexts/MyPokemonContext\"\nimport DefaultNavbar from './components/Navbars/DefaultNavbar'\nimport {\n  HomePage,\n  PokemonListPage,\n  PokemonDetailPage,\n  MyPokemonListPage\n} from './pages'\n\nconst App = () => {\n  console.log(\"Render App\")\n  return (\n    <Router>\n      <div>\n        <DefaultNavbar />\n        <Switch>\n          <MyPokemonContextProvider>\n            <Route path=\"/phincon_pokedex\" exact component={HomePage} />\n            <Route path=\"/phincon_pokedex/pokemonlist\" component={PokemonListPage} />\n            <Route path=\"/phincon_pokedex/pokemondetail/:name\" component={PokemonDetailPage} />\n            <Route path=\"/phincon_pokedex/mypokemonlist\" component={MyPokemonListPage} />\n          </MyPokemonContextProvider>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: 'https://graphql-pokeapi.vercel.app/api/graphql',\n  cache: new InMemoryCache()\n});\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}